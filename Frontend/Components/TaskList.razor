@inject HttpClient HttpClient
@inject NavigationManager Navigation
@using Common.DTOs.Tasks

<h3>Tasks</h3>

<table class="table">
    <thead>
        <tr>
            <th>Title</th>
            <th>Description</th>
            <th>Due Date</th>
            <th>Priority</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var task in tasks)
        {
            <tr>
                <td>@task.Title</td>
                <td>@task.Description</td>
                <td>@task.DueDate</td>
                <td>@task.Priority</td>
                <td>@task.Status</td>
                <td>
                    <button @onclick="() => EditTask(task.Id)">Edit</button>
                    <button @onclick="() => DeleteTask(task.Id)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<TaskDTO> tasks = new List<TaskDTO>();

    protected override async Task OnInitializedAsync()
    {
        // TODO - error handling
        tasks = await HttpClient.GetFromJsonAsync<List<TaskDTO>>("api/tasks");
    }

    private void EditTask(int id)
    {
        Navigation.NavigateTo($"/task/edit/{id}");
    }

    private async Task DeleteTask(int id)
    {
        await HttpClient.DeleteAsync($"api/tasks/{id}");

        // TODO - error handling
        tasks = await HttpClient.GetFromJsonAsync<List<TaskDTO>>("api/tasks");
    }
}
