@page "/register"
@inject AuthenticationService AuthenticationService
@inject NavigationManager Navigation
@using Common.DTOs.Authentication

<EditForm Model="registerDTO" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />
    @* <InputText id="email" @bind-Value="registerDTO.Email" />
    <InputText id="password" type="password" @bind-Value="registerDTO.Password" />
    <button type="submit">Register</button> *@
    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="@registerDTO.Email" />
        <ValidationMessage For="@(() => registerDTO.Email)" />
    </div>

    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="@registerDTO.Password" />
        <ValidationMessage For="@(() => registerDTO.Password)" />
    </div>

    @*
    <div class="form-group">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" type="password" class="form-control" @bind-Value="@registerDTO.ConfirmPassword" />
        <ValidationMessage For="@(() => registerDTO.ConfirmPassword)" />
    </div>
    *@

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
    private RegisterDTO registerDTO = new RegisterDTO();

    private async Task HandleRegister()
    {
        await AuthenticationService.Register(registerDTO);

        Navigation.NavigateTo("/signin");
    }
}
